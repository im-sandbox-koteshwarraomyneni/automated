name: Create Project and Repository

on:
  push:
    branches: [ main ]

jobs:
  create-project-and-repo:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [12.x]
    steps:
      - uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
      - name: Install dependencies
        run: npm install
      - name: Run tests
        run: npm test
      - name: Install dependencies
        run: npm install @octokit/core
      - name: Create Project
        uses: actions/github-script@v3
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const { Octokit } = require("@octokit/core");
            const octokit = new Octokit({ auth: `token ${process.env.GITHUB_TOKEN}` });
            const orgName = "your-organization-name";
            const projectName = "your-project-name";
            const repoName = "your-repo-name";
            const project = await octokit.projects.createForOrg({ org: orgName, name: projectName });
            const projectId = project.data.id;
            const repo = await octokit.repos.createForAuthenticatedUser({ name: repoName });
            await octokit.projects.createForRepo({ owner: orgName, repo: repoName, name: projectName });
            await octokit.projects.createColumn({ project_id: projectId, name: "To do" });
            await octokit.projects.createColumn({ project_id: projectId, name: "In progress" });
            await octokit.projects.createColumn({ project_id: projectId, name: "Done" });
            await octokit.projects.createCard({ column_id: projectId, content_id: repo.data.id, content_type: "PullRequest" });
